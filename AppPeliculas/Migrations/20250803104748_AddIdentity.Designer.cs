// <auto-generated />
using System;
using AppPeliculas.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppPeliculas.Migrations
{
    [DbContext(typeof(PeliculaContext))]
    [Migration("20250803104748_AddIdentity")]
    partial class AddIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppPeliculas.Models.Estudio", b =>
                {
                    b.Property<string>("EstudioID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EstudioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstudioID");

                    b.ToTable("Estudios");

                    b.HasData(
                        new
                        {
                            EstudioID = "disney",
                            EstudioNombre = "Disney"
                        },
                        new
                        {
                            EstudioID = "columbia",
                            EstudioNombre = "Columbia Pictures"
                        },
                        new
                        {
                            EstudioID = "paramount",
                            EstudioNombre = "Paramount Pictures"
                        },
                        new
                        {
                            EstudioID = "20Century",
                            EstudioNombre = "20 Century"
                        });
                });

            modelBuilder.Entity("AppPeliculas.Models.Genero", b =>
                {
                    b.Property<string>("GeneroID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GeneroNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroID");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            GeneroID = "accion",
                            GeneroNombre = "Accion"
                        },
                        new
                        {
                            GeneroID = "comedia",
                            GeneroNombre = "Comedia"
                        },
                        new
                        {
                            GeneroID = "terror",
                            GeneroNombre = "Terror"
                        });
                });

            modelBuilder.Entity("AppPeliculas.Models.Pelicula", b =>
                {
                    b.Property<int>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeliculaId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<int>("Estreno")
                        .HasColumnType("int");

                    b.Property<string>("EstudioFK")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GeneroFK")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeliculaId");

                    b.HasIndex("EstudioFK");

                    b.HasIndex("GeneroFK");

                    b.ToTable("Peliculas");

                    b.HasData(
                        new
                        {
                            PeliculaId = 1,
                            Descripcion = "Mientras rebuscan en las profundidades de una estación espacial abandonada, un grupo de jóvenes colonizadores del espacio se encuentra cara a cara con la forma de vida más aterradora del universo.",
                            Duracion = 120,
                            Estreno = 2024,
                            EstudioFK = "20Century",
                            GeneroFK = "terror",
                            Titulo = "Alien Covenant"
                        },
                        new
                        {
                            PeliculaId = 2,
                            Descripcion = "Rumbo a un remoto planeta al otro lado de la galaxia, la tripulación de la nave colonial Covenant descubre lo que creen que es un paraíso inexplorado, pero resulta tratarse de un mundo oscuro y hostil cuyo único habitante es un \"sintético\" llamado David (Michael Fassbender), superviviente de la malograda expedición Prometheus.",
                            Duracion = 120,
                            Estreno = 2017,
                            EstudioFK = "20Century",
                            GeneroFK = "terror",
                            Titulo = "Alien Romulus"
                        },
                        new
                        {
                            PeliculaId = 3,
                            Descripcion = "",
                            Duracion = 120,
                            Estreno = 2019,
                            EstudioFK = "disney",
                            GeneroFK = "accion",
                            Titulo = "Avengers Endgame"
                        },
                        new
                        {
                            PeliculaId = 4,
                            Descripcion = "",
                            Duracion = 120,
                            Estreno = 2018,
                            EstudioFK = "disney",
                            GeneroFK = "accion",
                            Titulo = "Avengers Infinity War"
                        },
                        new
                        {
                            PeliculaId = 5,
                            Descripcion = "",
                            Duracion = 120,
                            Estreno = 2018,
                            EstudioFK = "paramount",
                            GeneroFK = "accion",
                            Titulo = "Mision Imposible Sentencia Mortal"
                        },
                        new
                        {
                            PeliculaId = 6,
                            Descripcion = "Un grupo de científicos y exploradores viajan a un remoto planeta en busca de respuestas sobre el origen de la humanidad, pero descubren una amenaza que podría poner en peligro su propia existencia.",
                            Duracion = 120,
                            Estreno = 2012,
                            EstudioFK = "20Century",
                            GeneroFK = "terror",
                            Titulo = "Prometheus"
                        },
                        new
                        {
                            PeliculaId = 7,
                            Descripcion = "Una joven psiquiatra se enfrenta a una serie de eventos aterradores después de que un paciente comete suicidio frente a ella, dejando una maldición que la persigue.",
                            Duracion = 120,
                            Estreno = 2022,
                            EstudioFK = "paramount",
                            GeneroFK = "terror",
                            Titulo = "Smile"
                        },
                        new
                        {
                            PeliculaId = 8,
                            Descripcion = "La estrella del pop mundial Skye Riley está a punto de embarcarse en una nueva gira mundial cuando empieza a experimentar una serie de sucesos cada vez más aterradores e inexplicables. Angustiada por la espiral de horrores y la abrumadora presión de la fama, Skye tendrá que enfrentarse a su oscuro pasado para recuperar el control de su vida antes de que sea demasiado tarde",
                            Duracion = 120,
                            Estreno = 2024,
                            EstudioFK = "paramount",
                            GeneroFK = "terror",
                            Titulo = "Smile 2"
                        },
                        new
                        {
                            PeliculaId = 9,
                            Descripcion = "Un periodista y su productor consiguen una entrevista exclusiva con Kim Jong-Un, dictador de Corea del Norte. Ante tal oportunidad, la CIA les pide un \"favorcillo\": asesinar a Kim. Pero lo cierto es que Dave y Aaron no son las personas más cualificadas para realizar un magnicidio.",
                            Duracion = 120,
                            Estreno = 2014,
                            EstudioFK = "columbia",
                            GeneroFK = "comedia",
                            Titulo = "The Interview"
                        },
                        new
                        {
                            PeliculaId = 10,
                            Descripcion = "",
                            Duracion = 120,
                            Estreno = 2016,
                            EstudioFK = "columbia",
                            GeneroFK = "comedia",
                            Titulo = "This is the End"
                        });
                });

            modelBuilder.Entity("AppPeliculas.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppPeliculas.Models.Pelicula", b =>
                {
                    b.HasOne("AppPeliculas.Models.Estudio", "Estudio")
                        .WithMany()
                        .HasForeignKey("EstudioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppPeliculas.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudio");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AppPeliculas.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AppPeliculas.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppPeliculas.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AppPeliculas.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
